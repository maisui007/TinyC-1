Terminals unused in grammar

   VOID
   NUMBER
   LBRACKET
   RBRACKET
   MOE
   EQUALITY
   MOD


State 86 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: var_dec stmt_seq

    2 var_dec: var_dec single_dec
    3        | /* empty */

    4 single_dec: type ID SEMI

    5 type: INTEGER
    6     | FLOAT

    7 m: /* empty */

    8 n: /* empty */

    9 stmt_seq: stmt_seq m stmt
   10         | /* empty */

   11 stmt: IF exp THEN m stmt
   12     | IF exp THEN m stmt n ELSE m stmt
   13     | WHILE m exp DO m stmt
   14     | variable ASSIGN exp SEMI
   15     | variable EQUALSM1 exp SEMI
   16     | variable EQUALSP1 exp SEMI
   17     | PLUS1 variable SEMI
   18     | variable PLUS1 SEMI
   19     | MINUS1 variable SEMI
   20     | variable MINUS1 SEMI
   21     | READ LPAREN variable RPAREN SEMI
   22     | WRITE LPAREN exp RPAREN SEMI
   23     | PRINTF LPAREN STRING RPAREN SEMI
   24     | block

   25 block: LBRACE stmt_seq RBRACE

   26 exp: simple_exp LT simple_exp
   27    | simple_exp EQ simple_exp
   28    | simple_exp MT simple_exp
   29    | simple_exp LOE simple_exp
   30    | simple_exp ITSNOT simple_exp
   31    | simple_exp

   32 simple_exp: simple_exp PLUS term
   33           | simple_exp MINUS term
   34           | term

   35 term: term TIMES factor
   36     | term DIV factor
   37     | factor

   38 factor: LPAREN exp RPAREN
   39       | INT_NUM
   40       | FLOAT_NUM
   41       | variable

   42 variable: ID


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER (258) 5
FLOAT (259) 6
ID (260) 4 42
VOID (261)
STRING (262) 23
PRINTF (263) 23
IF (264) 11 12
THEN (265) 11 12
ELSE (266) 12
WHILE (267) 13
DO (268) 13
READ (269) 21
WRITE (270) 22
NUMBER (271)
SEMI (272) 4 14 15 16 17 18 19 20 21 22 23
LPAREN (273) 21 22 23 38
RPAREN (274) 21 22 23 38
LBRACE (275) 25
RBRACE (276) 25
LBRACKET (277)
RBRACKET (278)
LT (279) 26
MT (280) 28
LOE (281) 29
MOE (282)
ASSIGN (283) 14
EQUALITY (284)
ITSNOT (285) 30
PLUS1 (286) 17 18
MINUS1 (287) 19 20
EQUALSM1 (288) 15
EQUALSP1 (289) 16
MOD (290)
EQ (291) 27
FLOAT_NUM (292) 40
INT_NUM (293) 39
PLUS (294) 32
MINUS (295) 33
TIMES (296) 35
DIV (297) 36


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1, on right: 0
var_dec (45)
    on left: 2 3, on right: 1 2
single_dec (46)
    on left: 4, on right: 2
type (47)
    on left: 5 6, on right: 4
m (48)
    on left: 7, on right: 9 11 12 13
n (49)
    on left: 8, on right: 12
stmt_seq (50)
    on left: 9 10, on right: 1 9 25
stmt (51)
    on left: 11 12 13 14 15 16 17 18 19 20 21 22 23 24, on right: 9
    11 12 13
block (52)
    on left: 25, on right: 24
exp (53)
    on left: 26 27 28 29 30 31, on right: 11 12 13 14 15 16 22 38
simple_exp (54)
    on left: 32 33 34, on right: 26 27 28 29 30 31 32 33
term (55)
    on left: 35 36 37, on right: 32 33 34 35 36
factor (56)
    on left: 38 39 40 41, on right: 35 36 37
variable (57)
    on left: 42, on right: 14 15 16 17 18 19 20 21 41


state 0

    0 $accept: . program $end

    $default  reduce using rule 3 (var_dec)

    program  go to state 1
    var_dec  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: var_dec . stmt_seq
    2 var_dec: var_dec . single_dec

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5

    $default  reduce using rule 10 (stmt_seq)

    single_dec  go to state 6
    type        go to state 7
    stmt_seq    go to state 8


state 3

    0 $accept: program $end .

    $default  accept


state 4

    5 type: INTEGER .

    $default  reduce using rule 5 (type)


state 5

    6 type: FLOAT .

    $default  reduce using rule 6 (type)


state 6

    2 var_dec: var_dec single_dec .

    $default  reduce using rule 2 (var_dec)


state 7

    4 single_dec: type . ID SEMI

    ID  shift, and go to state 9


state 8

    1 program: var_dec stmt_seq .
    9 stmt_seq: stmt_seq . m stmt

    $end      reduce using rule 1 (program)
    $default  reduce using rule 7 (m)

    m  go to state 10


state 9

    4 single_dec: type ID . SEMI

    SEMI  shift, and go to state 11


state 10

    9 stmt_seq: stmt_seq m . stmt

    ID      shift, and go to state 12
    PRINTF  shift, and go to state 13
    IF      shift, and go to state 14
    WHILE   shift, and go to state 15
    READ    shift, and go to state 16
    WRITE   shift, and go to state 17
    LBRACE  shift, and go to state 18
    PLUS1   shift, and go to state 19
    MINUS1  shift, and go to state 20

    stmt      go to state 21
    block     go to state 22
    variable  go to state 23


state 11

    4 single_dec: type ID SEMI .

    $default  reduce using rule 4 (single_dec)


state 12

   42 variable: ID .

    $default  reduce using rule 42 (variable)


state 13

   23 stmt: PRINTF . LPAREN STRING RPAREN SEMI

    LPAREN  shift, and go to state 24


state 14

   11 stmt: IF . exp THEN m stmt
   12     | IF . exp THEN m stmt n ELSE m stmt

    ID         shift, and go to state 12
    LPAREN     shift, and go to state 25
    FLOAT_NUM  shift, and go to state 26
    INT_NUM    shift, and go to state 27

    exp         go to state 28
    simple_exp  go to state 29
    term        go to state 30
    factor      go to state 31
    variable    go to state 32


state 15

   13 stmt: WHILE . m exp DO m stmt

    $default  reduce using rule 7 (m)

    m  go to state 33


state 16

   21 stmt: READ . LPAREN variable RPAREN SEMI

    LPAREN  shift, and go to state 34


state 17

   22 stmt: WRITE . LPAREN exp RPAREN SEMI

    LPAREN  shift, and go to state 35


state 18

   25 block: LBRACE . stmt_seq RBRACE

    $default  reduce using rule 10 (stmt_seq)

    stmt_seq  go to state 36


state 19

   17 stmt: PLUS1 . variable SEMI

    ID  shift, and go to state 12

    variable  go to state 37


state 20

   19 stmt: MINUS1 . variable SEMI

    ID  shift, and go to state 12

    variable  go to state 38


state 21

    9 stmt_seq: stmt_seq m stmt .

    $default  reduce using rule 9 (stmt_seq)


state 22

   24 stmt: block .

    $default  reduce using rule 24 (stmt)


state 23

   14 stmt: variable . ASSIGN exp SEMI
   15     | variable . EQUALSM1 exp SEMI
   16     | variable . EQUALSP1 exp SEMI
   18     | variable . PLUS1 SEMI
   20     | variable . MINUS1 SEMI

    ASSIGN    shift, and go to state 39
    PLUS1     shift, and go to state 40
    MINUS1    shift, and go to state 41
    EQUALSM1  shift, and go to state 42
    EQUALSP1  shift, and go to state 43


state 24

   23 stmt: PRINTF LPAREN . STRING RPAREN SEMI

    STRING  shift, and go to state 44


state 25

   38 factor: LPAREN . exp RPAREN

    ID         shift, and go to state 12
    LPAREN     shift, and go to state 25
    FLOAT_NUM  shift, and go to state 26
    INT_NUM    shift, and go to state 27

    exp         go to state 45
    simple_exp  go to state 29
    term        go to state 30
    factor      go to state 31
    variable    go to state 32


state 26

   40 factor: FLOAT_NUM .

    $default  reduce using rule 40 (factor)


state 27

   39 factor: INT_NUM .

    $default  reduce using rule 39 (factor)


state 28

   11 stmt: IF exp . THEN m stmt
   12     | IF exp . THEN m stmt n ELSE m stmt

    THEN  shift, and go to state 46


state 29

   26 exp: simple_exp . LT simple_exp
   27    | simple_exp . EQ simple_exp
   28    | simple_exp . MT simple_exp
   29    | simple_exp . LOE simple_exp
   30    | simple_exp . ITSNOT simple_exp
   31    | simple_exp .
   32 simple_exp: simple_exp . PLUS term
   33           | simple_exp . MINUS term

    LT      shift, and go to state 47
    MT      shift, and go to state 48
    LOE     shift, and go to state 49
    ITSNOT  shift, and go to state 50
    EQ      shift, and go to state 51
    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53

    $default  reduce using rule 31 (exp)


state 30

   34 simple_exp: term .
   35 term: term . TIMES factor
   36     | term . DIV factor

    TIMES  shift, and go to state 54
    DIV    shift, and go to state 55

    $default  reduce using rule 34 (simple_exp)


state 31

   37 term: factor .

    $default  reduce using rule 37 (term)


state 32

   41 factor: variable .

    $default  reduce using rule 41 (factor)


state 33

   13 stmt: WHILE m . exp DO m stmt

    ID         shift, and go to state 12
    LPAREN     shift, and go to state 25
    FLOAT_NUM  shift, and go to state 26
    INT_NUM    shift, and go to state 27

    exp         go to state 56
    simple_exp  go to state 29
    term        go to state 30
    factor      go to state 31
    variable    go to state 32


state 34

   21 stmt: READ LPAREN . variable RPAREN SEMI

    ID  shift, and go to state 12

    variable  go to state 57


state 35

   22 stmt: WRITE LPAREN . exp RPAREN SEMI

    ID         shift, and go to state 12
    LPAREN     shift, and go to state 25
    FLOAT_NUM  shift, and go to state 26
    INT_NUM    shift, and go to state 27

    exp         go to state 58
    simple_exp  go to state 29
    term        go to state 30
    factor      go to state 31
    variable    go to state 32


state 36

    9 stmt_seq: stmt_seq . m stmt
   25 block: LBRACE stmt_seq . RBRACE

    RBRACE  shift, and go to state 59

    $default  reduce using rule 7 (m)

    m  go to state 10


state 37

   17 stmt: PLUS1 variable . SEMI

    SEMI  shift, and go to state 60


state 38

   19 stmt: MINUS1 variable . SEMI

    SEMI  shift, and go to state 61


state 39

   14 stmt: variable ASSIGN . exp SEMI

    ID         shift, and go to state 12
    LPAREN     shift, and go to state 25
    FLOAT_NUM  shift, and go to state 26
    INT_NUM    shift, and go to state 27

    exp         go to state 62
    simple_exp  go to state 29
    term        go to state 30
    factor      go to state 31
    variable    go to state 32


state 40

   18 stmt: variable PLUS1 . SEMI

    SEMI  shift, and go to state 63


state 41

   20 stmt: variable MINUS1 . SEMI

    SEMI  shift, and go to state 64


state 42

   15 stmt: variable EQUALSM1 . exp SEMI

    ID         shift, and go to state 12
    LPAREN     shift, and go to state 25
    FLOAT_NUM  shift, and go to state 26
    INT_NUM    shift, and go to state 27

    exp         go to state 65
    simple_exp  go to state 29
    term        go to state 30
    factor      go to state 31
    variable    go to state 32


state 43

   16 stmt: variable EQUALSP1 . exp SEMI

    ID         shift, and go to state 12
    LPAREN     shift, and go to state 25
    FLOAT_NUM  shift, and go to state 26
    INT_NUM    shift, and go to state 27

    exp         go to state 66
    simple_exp  go to state 29
    term        go to state 30
    factor      go to state 31
    variable    go to state 32


state 44

   23 stmt: PRINTF LPAREN STRING . RPAREN SEMI

    RPAREN  shift, and go to state 67


state 45

   38 factor: LPAREN exp . RPAREN

    RPAREN  shift, and go to state 68


state 46

   11 stmt: IF exp THEN . m stmt
   12     | IF exp THEN . m stmt n ELSE m stmt

    $default  reduce using rule 7 (m)

    m  go to state 69


state 47

   26 exp: simple_exp LT . simple_exp

    ID         shift, and go to state 12
    LPAREN     shift, and go to state 25
    FLOAT_NUM  shift, and go to state 26
    INT_NUM    shift, and go to state 27

    simple_exp  go to state 70
    term        go to state 30
    factor      go to state 31
    variable    go to state 32


state 48

   28 exp: simple_exp MT . simple_exp

    ID         shift, and go to state 12
    LPAREN     shift, and go to state 25
    FLOAT_NUM  shift, and go to state 26
    INT_NUM    shift, and go to state 27

    simple_exp  go to state 71
    term        go to state 30
    factor      go to state 31
    variable    go to state 32


state 49

   29 exp: simple_exp LOE . simple_exp

    ID         shift, and go to state 12
    LPAREN     shift, and go to state 25
    FLOAT_NUM  shift, and go to state 26
    INT_NUM    shift, and go to state 27

    simple_exp  go to state 72
    term        go to state 30
    factor      go to state 31
    variable    go to state 32


state 50

   30 exp: simple_exp ITSNOT . simple_exp

    ID         shift, and go to state 12
    LPAREN     shift, and go to state 25
    FLOAT_NUM  shift, and go to state 26
    INT_NUM    shift, and go to state 27

    simple_exp  go to state 73
    term        go to state 30
    factor      go to state 31
    variable    go to state 32


state 51

   27 exp: simple_exp EQ . simple_exp

    ID         shift, and go to state 12
    LPAREN     shift, and go to state 25
    FLOAT_NUM  shift, and go to state 26
    INT_NUM    shift, and go to state 27

    simple_exp  go to state 74
    term        go to state 30
    factor      go to state 31
    variable    go to state 32


state 52

   32 simple_exp: simple_exp PLUS . term

    ID         shift, and go to state 12
    LPAREN     shift, and go to state 25
    FLOAT_NUM  shift, and go to state 26
    INT_NUM    shift, and go to state 27

    term      go to state 75
    factor    go to state 31
    variable  go to state 32


state 53

   33 simple_exp: simple_exp MINUS . term

    ID         shift, and go to state 12
    LPAREN     shift, and go to state 25
    FLOAT_NUM  shift, and go to state 26
    INT_NUM    shift, and go to state 27

    term      go to state 76
    factor    go to state 31
    variable  go to state 32


state 54

   35 term: term TIMES . factor

    ID         shift, and go to state 12
    LPAREN     shift, and go to state 25
    FLOAT_NUM  shift, and go to state 26
    INT_NUM    shift, and go to state 27

    factor    go to state 77
    variable  go to state 32


state 55

   36 term: term DIV . factor

    ID         shift, and go to state 12
    LPAREN     shift, and go to state 25
    FLOAT_NUM  shift, and go to state 26
    INT_NUM    shift, and go to state 27

    factor    go to state 78
    variable  go to state 32


state 56

   13 stmt: WHILE m exp . DO m stmt

    DO  shift, and go to state 79


state 57

   21 stmt: READ LPAREN variable . RPAREN SEMI

    RPAREN  shift, and go to state 80


state 58

   22 stmt: WRITE LPAREN exp . RPAREN SEMI

    RPAREN  shift, and go to state 81


state 59

   25 block: LBRACE stmt_seq RBRACE .

    $default  reduce using rule 25 (block)


state 60

   17 stmt: PLUS1 variable SEMI .

    $default  reduce using rule 17 (stmt)


state 61

   19 stmt: MINUS1 variable SEMI .

    $default  reduce using rule 19 (stmt)


state 62

   14 stmt: variable ASSIGN exp . SEMI

    SEMI  shift, and go to state 82


state 63

   18 stmt: variable PLUS1 SEMI .

    $default  reduce using rule 18 (stmt)


state 64

   20 stmt: variable MINUS1 SEMI .

    $default  reduce using rule 20 (stmt)


state 65

   15 stmt: variable EQUALSM1 exp . SEMI

    SEMI  shift, and go to state 83


state 66

   16 stmt: variable EQUALSP1 exp . SEMI

    SEMI  shift, and go to state 84


state 67

   23 stmt: PRINTF LPAREN STRING RPAREN . SEMI

    SEMI  shift, and go to state 85


state 68

   38 factor: LPAREN exp RPAREN .

    $default  reduce using rule 38 (factor)


state 69

   11 stmt: IF exp THEN m . stmt
   12     | IF exp THEN m . stmt n ELSE m stmt

    ID      shift, and go to state 12
    PRINTF  shift, and go to state 13
    IF      shift, and go to state 14
    WHILE   shift, and go to state 15
    READ    shift, and go to state 16
    WRITE   shift, and go to state 17
    LBRACE  shift, and go to state 18
    PLUS1   shift, and go to state 19
    MINUS1  shift, and go to state 20

    stmt      go to state 86
    block     go to state 22
    variable  go to state 23


state 70

   26 exp: simple_exp LT simple_exp .
   32 simple_exp: simple_exp . PLUS term
   33           | simple_exp . MINUS term

    PLUS   shift, and go to state 52
    MINUS  shift, and go to state 53

    $default  reduce using rule 26 (exp)


state 71

   28 exp: simple_exp MT simple_exp .
   32 simple_exp: simple_exp . PLUS term
   33           | simple_exp . MINUS term

    PLUS   shift, and go to state 52
    MINUS  shift, and go to state 53

    $default  reduce using rule 28 (exp)


state 72

   29 exp: simple_exp LOE simple_exp .
   32 simple_exp: simple_exp . PLUS term
   33           | simple_exp . MINUS term

    PLUS   shift, and go to state 52
    MINUS  shift, and go to state 53

    $default  reduce using rule 29 (exp)


state 73

   30 exp: simple_exp ITSNOT simple_exp .
   32 simple_exp: simple_exp . PLUS term
   33           | simple_exp . MINUS term

    PLUS   shift, and go to state 52
    MINUS  shift, and go to state 53

    $default  reduce using rule 30 (exp)


state 74

   27 exp: simple_exp EQ simple_exp .
   32 simple_exp: simple_exp . PLUS term
   33           | simple_exp . MINUS term

    PLUS   shift, and go to state 52
    MINUS  shift, and go to state 53

    $default  reduce using rule 27 (exp)


state 75

   32 simple_exp: simple_exp PLUS term .
   35 term: term . TIMES factor
   36     | term . DIV factor

    TIMES  shift, and go to state 54
    DIV    shift, and go to state 55

    $default  reduce using rule 32 (simple_exp)


state 76

   33 simple_exp: simple_exp MINUS term .
   35 term: term . TIMES factor
   36     | term . DIV factor

    TIMES  shift, and go to state 54
    DIV    shift, and go to state 55

    $default  reduce using rule 33 (simple_exp)


state 77

   35 term: term TIMES factor .

    $default  reduce using rule 35 (term)


state 78

   36 term: term DIV factor .

    $default  reduce using rule 36 (term)


state 79

   13 stmt: WHILE m exp DO . m stmt

    $default  reduce using rule 7 (m)

    m  go to state 87


state 80

   21 stmt: READ LPAREN variable RPAREN . SEMI

    SEMI  shift, and go to state 88


state 81

   22 stmt: WRITE LPAREN exp RPAREN . SEMI

    SEMI  shift, and go to state 89


state 82

   14 stmt: variable ASSIGN exp SEMI .

    $default  reduce using rule 14 (stmt)


state 83

   15 stmt: variable EQUALSM1 exp SEMI .

    $default  reduce using rule 15 (stmt)


state 84

   16 stmt: variable EQUALSP1 exp SEMI .

    $default  reduce using rule 16 (stmt)


state 85

   23 stmt: PRINTF LPAREN STRING RPAREN SEMI .

    $default  reduce using rule 23 (stmt)


state 86

   11 stmt: IF exp THEN m stmt .
   12     | IF exp THEN m stmt . n ELSE m stmt

    ELSE      reduce using rule 8 (n)
    ELSE      [reduce using rule 11 (stmt)]
    $default  reduce using rule 11 (stmt)

    n  go to state 90


state 87

   13 stmt: WHILE m exp DO m . stmt

    ID      shift, and go to state 12
    PRINTF  shift, and go to state 13
    IF      shift, and go to state 14
    WHILE   shift, and go to state 15
    READ    shift, and go to state 16
    WRITE   shift, and go to state 17
    LBRACE  shift, and go to state 18
    PLUS1   shift, and go to state 19
    MINUS1  shift, and go to state 20

    stmt      go to state 91
    block     go to state 22
    variable  go to state 23


state 88

   21 stmt: READ LPAREN variable RPAREN SEMI .

    $default  reduce using rule 21 (stmt)


state 89

   22 stmt: WRITE LPAREN exp RPAREN SEMI .

    $default  reduce using rule 22 (stmt)


state 90

   12 stmt: IF exp THEN m stmt n . ELSE m stmt

    ELSE  shift, and go to state 92


state 91

   13 stmt: WHILE m exp DO m stmt .

    $default  reduce using rule 13 (stmt)


state 92

   12 stmt: IF exp THEN m stmt n ELSE . m stmt

    $default  reduce using rule 7 (m)

    m  go to state 93


state 93

   12 stmt: IF exp THEN m stmt n ELSE m . stmt

    ID      shift, and go to state 12
    PRINTF  shift, and go to state 13
    IF      shift, and go to state 14
    WHILE   shift, and go to state 15
    READ    shift, and go to state 16
    WRITE   shift, and go to state 17
    LBRACE  shift, and go to state 18
    PLUS1   shift, and go to state 19
    MINUS1  shift, and go to state 20

    stmt      go to state 94
    block     go to state 22
    variable  go to state 23


state 94

   12 stmt: IF exp THEN m stmt n ELSE m stmt .

    $default  reduce using rule 12 (stmt)
