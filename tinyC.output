Terminals which are not used

   VOID
   NUMBER
   LBRACKET
   RBRACKET
   MOE
   EQUALITY
   MOD


State 68 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: var_dec stmt_seq

    2 var_dec: var_dec single_dec
    3        | /* empty */

    4 single_dec: type ID SEMI

    5 type: INTEGER
    6     | FLOAT

    7 stmt_seq: stmt_seq stmt
    8         | /* empty */

    9 stmt: IF exp THEN stmt
   10     | IF exp THEN stmt ELSE stmt
   11     | WHILE exp DO stmt
   12     | variable ASSIGN exp SEMI
   13     | variable EQUALSM1 exp SEMI
   14     | variable EQUALSP1 exp SEMI
   15     | PLUS1 variable SEMI
   16     | variable PLUS1 SEMI
   17     | MINUS1 variable SEMI
   18     | variable MINUS1 SEMI
   19     | READ LPAREN variable RPAREN SEMI
   20     | WRITE LPAREN exp RPAREN SEMI
   21     | PRINTF LPAREN STRING RPAREN SEMI
   22     | block

   23 block: LBRACE stmt_seq RBRACE

   24 exp: simple_exp LT simple_exp
   25    | simple_exp EQ simple_exp
   26    | simple_exp MT simple_exp
   27    | simple_exp LOE simple_exp
   28    | simple_exp ITSNOT simple_exp
   29    | simple_exp

   30 simple_exp: simple_exp PLUS term
   31           | simple_exp MINUS term
   32           | term

   33 term: term TIMES factor
   34     | term DIV factor
   35     | factor

   36 factor: LPAREN exp RPAREN
   37       | INT_NUM
   38       | FLOAT_NUM
   39       | variable

   40 variable: ID


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER (258) 5
FLOAT (259) 6
ID (260) 4 40
VOID (261)
STRING (262) 21
PRINTF (263) 21
IF (264) 9 10
THEN (265) 9 10
ELSE (266) 10
WHILE (267) 11
DO (268) 11
READ (269) 19
WRITE (270) 20
NUMBER (271)
SEMI (272) 4 12 13 14 15 16 17 18 19 20 21
LPAREN (273) 19 20 21 36
RPAREN (274) 19 20 21 36
LBRACE (275) 23
RBRACE (276) 23
LBRACKET (277)
RBRACKET (278)
LT (279) 24
MT (280) 26
LOE (281) 27
MOE (282)
ASSIGN (283) 12
EQUALITY (284)
ITSNOT (285) 28
PLUS1 (286) 15 16
MINUS1 (287) 17 18
EQUALSM1 (288) 13
EQUALSP1 (289) 14
MOD (290)
EQ (291) 25
FLOAT_NUM (292) 38
INT_NUM (293) 37
PLUS (294) 30
MINUS (295) 31
TIMES (296) 33
DIV (297) 34


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1, on right: 0
var_dec (45)
    on left: 2 3, on right: 1 2
single_dec (46)
    on left: 4, on right: 2
type (47)
    on left: 5 6, on right: 4
stmt_seq (48)
    on left: 7 8, on right: 1 7 23
stmt (49)
    on left: 9 10 11 12 13 14 15 16 17 18 19 20 21 22,
    on right: 7 9 10 11
block (50)
    on left: 23, on right: 22
exp (51)
    on left: 24 25 26 27 28 29, on right: 9 10 11 12 13 14 20 36
simple_exp (52)
    on left: 30 31 32, on right: 24 25 26 27 28 29 30 31
term (53)
    on left: 33 34 35, on right: 30 31 32 33 34
factor (54)
    on left: 36 37 38 39, on right: 33 34 35
variable (55)
    on left: 40, on right: 12 13 14 15 16 17 18 19 39


state 0

    0 $accept: . program $end

    $default  reduce using rule 3 (var_dec)

    program  go to state 1
    var_dec  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: var_dec . stmt_seq
    2 var_dec: var_dec . single_dec

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5

    $default  reduce using rule 8 (stmt_seq)

    single_dec  go to state 6
    type        go to state 7
    stmt_seq    go to state 8


state 3

    0 $accept: program $end .

    $default  accept


state 4

    5 type: INTEGER .

    $default  reduce using rule 5 (type)


state 5

    6 type: FLOAT .

    $default  reduce using rule 6 (type)


state 6

    2 var_dec: var_dec single_dec .

    $default  reduce using rule 2 (var_dec)


state 7

    4 single_dec: type . ID SEMI

    ID  shift, and go to state 9


state 8

    1 program: var_dec stmt_seq .
    7 stmt_seq: stmt_seq . stmt

    ID      shift, and go to state 10
    PRINTF  shift, and go to state 11
    IF      shift, and go to state 12
    WHILE   shift, and go to state 13
    READ    shift, and go to state 14
    WRITE   shift, and go to state 15
    LBRACE  shift, and go to state 16
    PLUS1   shift, and go to state 17
    MINUS1  shift, and go to state 18

    $default  reduce using rule 1 (program)

    stmt      go to state 19
    block     go to state 20
    variable  go to state 21


state 9

    4 single_dec: type ID . SEMI

    SEMI  shift, and go to state 22


state 10

   40 variable: ID .

    $default  reduce using rule 40 (variable)


state 11

   21 stmt: PRINTF . LPAREN STRING RPAREN SEMI

    LPAREN  shift, and go to state 23


state 12

    9 stmt: IF . exp THEN stmt
   10     | IF . exp THEN stmt ELSE stmt

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 24
    FLOAT_NUM  shift, and go to state 25
    INT_NUM    shift, and go to state 26

    exp         go to state 27
    simple_exp  go to state 28
    term        go to state 29
    factor      go to state 30
    variable    go to state 31


state 13

   11 stmt: WHILE . exp DO stmt

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 24
    FLOAT_NUM  shift, and go to state 25
    INT_NUM    shift, and go to state 26

    exp         go to state 32
    simple_exp  go to state 28
    term        go to state 29
    factor      go to state 30
    variable    go to state 31


state 14

   19 stmt: READ . LPAREN variable RPAREN SEMI

    LPAREN  shift, and go to state 33


state 15

   20 stmt: WRITE . LPAREN exp RPAREN SEMI

    LPAREN  shift, and go to state 34


state 16

   23 block: LBRACE . stmt_seq RBRACE

    $default  reduce using rule 8 (stmt_seq)

    stmt_seq  go to state 35


state 17

   15 stmt: PLUS1 . variable SEMI

    ID  shift, and go to state 10

    variable  go to state 36


state 18

   17 stmt: MINUS1 . variable SEMI

    ID  shift, and go to state 10

    variable  go to state 37


state 19

    7 stmt_seq: stmt_seq stmt .

    $default  reduce using rule 7 (stmt_seq)


state 20

   22 stmt: block .

    $default  reduce using rule 22 (stmt)


state 21

   12 stmt: variable . ASSIGN exp SEMI
   13     | variable . EQUALSM1 exp SEMI
   14     | variable . EQUALSP1 exp SEMI
   16     | variable . PLUS1 SEMI
   18     | variable . MINUS1 SEMI

    ASSIGN    shift, and go to state 38
    PLUS1     shift, and go to state 39
    MINUS1    shift, and go to state 40
    EQUALSM1  shift, and go to state 41
    EQUALSP1  shift, and go to state 42


state 22

    4 single_dec: type ID SEMI .

    $default  reduce using rule 4 (single_dec)


state 23

   21 stmt: PRINTF LPAREN . STRING RPAREN SEMI

    STRING  shift, and go to state 43


state 24

   36 factor: LPAREN . exp RPAREN

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 24
    FLOAT_NUM  shift, and go to state 25
    INT_NUM    shift, and go to state 26

    exp         go to state 44
    simple_exp  go to state 28
    term        go to state 29
    factor      go to state 30
    variable    go to state 31


state 25

   38 factor: FLOAT_NUM .

    $default  reduce using rule 38 (factor)


state 26

   37 factor: INT_NUM .

    $default  reduce using rule 37 (factor)


state 27

    9 stmt: IF exp . THEN stmt
   10     | IF exp . THEN stmt ELSE stmt

    THEN  shift, and go to state 45


state 28

   24 exp: simple_exp . LT simple_exp
   25    | simple_exp . EQ simple_exp
   26    | simple_exp . MT simple_exp
   27    | simple_exp . LOE simple_exp
   28    | simple_exp . ITSNOT simple_exp
   29    | simple_exp .
   30 simple_exp: simple_exp . PLUS term
   31           | simple_exp . MINUS term

    LT      shift, and go to state 46
    MT      shift, and go to state 47
    LOE     shift, and go to state 48
    ITSNOT  shift, and go to state 49
    EQ      shift, and go to state 50
    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52

    $default  reduce using rule 29 (exp)


state 29

   32 simple_exp: term .
   33 term: term . TIMES factor
   34     | term . DIV factor

    TIMES  shift, and go to state 53
    DIV    shift, and go to state 54

    $default  reduce using rule 32 (simple_exp)


state 30

   35 term: factor .

    $default  reduce using rule 35 (term)


state 31

   39 factor: variable .

    $default  reduce using rule 39 (factor)


state 32

   11 stmt: WHILE exp . DO stmt

    DO  shift, and go to state 55


state 33

   19 stmt: READ LPAREN . variable RPAREN SEMI

    ID  shift, and go to state 10

    variable  go to state 56


state 34

   20 stmt: WRITE LPAREN . exp RPAREN SEMI

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 24
    FLOAT_NUM  shift, and go to state 25
    INT_NUM    shift, and go to state 26

    exp         go to state 57
    simple_exp  go to state 28
    term        go to state 29
    factor      go to state 30
    variable    go to state 31


state 35

    7 stmt_seq: stmt_seq . stmt
   23 block: LBRACE stmt_seq . RBRACE

    ID      shift, and go to state 10
    PRINTF  shift, and go to state 11
    IF      shift, and go to state 12
    WHILE   shift, and go to state 13
    READ    shift, and go to state 14
    WRITE   shift, and go to state 15
    LBRACE  shift, and go to state 16
    RBRACE  shift, and go to state 58
    PLUS1   shift, and go to state 17
    MINUS1  shift, and go to state 18

    stmt      go to state 19
    block     go to state 20
    variable  go to state 21


state 36

   15 stmt: PLUS1 variable . SEMI

    SEMI  shift, and go to state 59


state 37

   17 stmt: MINUS1 variable . SEMI

    SEMI  shift, and go to state 60


state 38

   12 stmt: variable ASSIGN . exp SEMI

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 24
    FLOAT_NUM  shift, and go to state 25
    INT_NUM    shift, and go to state 26

    exp         go to state 61
    simple_exp  go to state 28
    term        go to state 29
    factor      go to state 30
    variable    go to state 31


state 39

   16 stmt: variable PLUS1 . SEMI

    SEMI  shift, and go to state 62


state 40

   18 stmt: variable MINUS1 . SEMI

    SEMI  shift, and go to state 63


state 41

   13 stmt: variable EQUALSM1 . exp SEMI

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 24
    FLOAT_NUM  shift, and go to state 25
    INT_NUM    shift, and go to state 26

    exp         go to state 64
    simple_exp  go to state 28
    term        go to state 29
    factor      go to state 30
    variable    go to state 31


state 42

   14 stmt: variable EQUALSP1 . exp SEMI

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 24
    FLOAT_NUM  shift, and go to state 25
    INT_NUM    shift, and go to state 26

    exp         go to state 65
    simple_exp  go to state 28
    term        go to state 29
    factor      go to state 30
    variable    go to state 31


state 43

   21 stmt: PRINTF LPAREN STRING . RPAREN SEMI

    RPAREN  shift, and go to state 66


state 44

   36 factor: LPAREN exp . RPAREN

    RPAREN  shift, and go to state 67


state 45

    9 stmt: IF exp THEN . stmt
   10     | IF exp THEN . stmt ELSE stmt

    ID      shift, and go to state 10
    PRINTF  shift, and go to state 11
    IF      shift, and go to state 12
    WHILE   shift, and go to state 13
    READ    shift, and go to state 14
    WRITE   shift, and go to state 15
    LBRACE  shift, and go to state 16
    PLUS1   shift, and go to state 17
    MINUS1  shift, and go to state 18

    stmt      go to state 68
    block     go to state 20
    variable  go to state 21


state 46

   24 exp: simple_exp LT . simple_exp

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 24
    FLOAT_NUM  shift, and go to state 25
    INT_NUM    shift, and go to state 26

    simple_exp  go to state 69
    term        go to state 29
    factor      go to state 30
    variable    go to state 31


state 47

   26 exp: simple_exp MT . simple_exp

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 24
    FLOAT_NUM  shift, and go to state 25
    INT_NUM    shift, and go to state 26

    simple_exp  go to state 70
    term        go to state 29
    factor      go to state 30
    variable    go to state 31


state 48

   27 exp: simple_exp LOE . simple_exp

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 24
    FLOAT_NUM  shift, and go to state 25
    INT_NUM    shift, and go to state 26

    simple_exp  go to state 71
    term        go to state 29
    factor      go to state 30
    variable    go to state 31


state 49

   28 exp: simple_exp ITSNOT . simple_exp

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 24
    FLOAT_NUM  shift, and go to state 25
    INT_NUM    shift, and go to state 26

    simple_exp  go to state 72
    term        go to state 29
    factor      go to state 30
    variable    go to state 31


state 50

   25 exp: simple_exp EQ . simple_exp

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 24
    FLOAT_NUM  shift, and go to state 25
    INT_NUM    shift, and go to state 26

    simple_exp  go to state 73
    term        go to state 29
    factor      go to state 30
    variable    go to state 31


state 51

   30 simple_exp: simple_exp PLUS . term

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 24
    FLOAT_NUM  shift, and go to state 25
    INT_NUM    shift, and go to state 26

    term      go to state 74
    factor    go to state 30
    variable  go to state 31


state 52

   31 simple_exp: simple_exp MINUS . term

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 24
    FLOAT_NUM  shift, and go to state 25
    INT_NUM    shift, and go to state 26

    term      go to state 75
    factor    go to state 30
    variable  go to state 31


state 53

   33 term: term TIMES . factor

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 24
    FLOAT_NUM  shift, and go to state 25
    INT_NUM    shift, and go to state 26

    factor    go to state 76
    variable  go to state 31


state 54

   34 term: term DIV . factor

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 24
    FLOAT_NUM  shift, and go to state 25
    INT_NUM    shift, and go to state 26

    factor    go to state 77
    variable  go to state 31


state 55

   11 stmt: WHILE exp DO . stmt

    ID      shift, and go to state 10
    PRINTF  shift, and go to state 11
    IF      shift, and go to state 12
    WHILE   shift, and go to state 13
    READ    shift, and go to state 14
    WRITE   shift, and go to state 15
    LBRACE  shift, and go to state 16
    PLUS1   shift, and go to state 17
    MINUS1  shift, and go to state 18

    stmt      go to state 78
    block     go to state 20
    variable  go to state 21


state 56

   19 stmt: READ LPAREN variable . RPAREN SEMI

    RPAREN  shift, and go to state 79


state 57

   20 stmt: WRITE LPAREN exp . RPAREN SEMI

    RPAREN  shift, and go to state 80


state 58

   23 block: LBRACE stmt_seq RBRACE .

    $default  reduce using rule 23 (block)


state 59

   15 stmt: PLUS1 variable SEMI .

    $default  reduce using rule 15 (stmt)


state 60

   17 stmt: MINUS1 variable SEMI .

    $default  reduce using rule 17 (stmt)


state 61

   12 stmt: variable ASSIGN exp . SEMI

    SEMI  shift, and go to state 81


state 62

   16 stmt: variable PLUS1 SEMI .

    $default  reduce using rule 16 (stmt)


state 63

   18 stmt: variable MINUS1 SEMI .

    $default  reduce using rule 18 (stmt)


state 64

   13 stmt: variable EQUALSM1 exp . SEMI

    SEMI  shift, and go to state 82


state 65

   14 stmt: variable EQUALSP1 exp . SEMI

    SEMI  shift, and go to state 83


state 66

   21 stmt: PRINTF LPAREN STRING RPAREN . SEMI

    SEMI  shift, and go to state 84


state 67

   36 factor: LPAREN exp RPAREN .

    $default  reduce using rule 36 (factor)


state 68

    9 stmt: IF exp THEN stmt .
   10     | IF exp THEN stmt . ELSE stmt

    ELSE  shift, and go to state 85

    ELSE      [reduce using rule 9 (stmt)]
    $default  reduce using rule 9 (stmt)


state 69

   24 exp: simple_exp LT simple_exp .
   30 simple_exp: simple_exp . PLUS term
   31           | simple_exp . MINUS term

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52

    $default  reduce using rule 24 (exp)


state 70

   26 exp: simple_exp MT simple_exp .
   30 simple_exp: simple_exp . PLUS term
   31           | simple_exp . MINUS term

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52

    $default  reduce using rule 26 (exp)


state 71

   27 exp: simple_exp LOE simple_exp .
   30 simple_exp: simple_exp . PLUS term
   31           | simple_exp . MINUS term

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52

    $default  reduce using rule 27 (exp)


state 72

   28 exp: simple_exp ITSNOT simple_exp .
   30 simple_exp: simple_exp . PLUS term
   31           | simple_exp . MINUS term

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52

    $default  reduce using rule 28 (exp)


state 73

   25 exp: simple_exp EQ simple_exp .
   30 simple_exp: simple_exp . PLUS term
   31           | simple_exp . MINUS term

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52

    $default  reduce using rule 25 (exp)


state 74

   30 simple_exp: simple_exp PLUS term .
   33 term: term . TIMES factor
   34     | term . DIV factor

    TIMES  shift, and go to state 53
    DIV    shift, and go to state 54

    $default  reduce using rule 30 (simple_exp)


state 75

   31 simple_exp: simple_exp MINUS term .
   33 term: term . TIMES factor
   34     | term . DIV factor

    TIMES  shift, and go to state 53
    DIV    shift, and go to state 54

    $default  reduce using rule 31 (simple_exp)


state 76

   33 term: term TIMES factor .

    $default  reduce using rule 33 (term)


state 77

   34 term: term DIV factor .

    $default  reduce using rule 34 (term)


state 78

   11 stmt: WHILE exp DO stmt .

    $default  reduce using rule 11 (stmt)


state 79

   19 stmt: READ LPAREN variable RPAREN . SEMI

    SEMI  shift, and go to state 86


state 80

   20 stmt: WRITE LPAREN exp RPAREN . SEMI

    SEMI  shift, and go to state 87


state 81

   12 stmt: variable ASSIGN exp SEMI .

    $default  reduce using rule 12 (stmt)


state 82

   13 stmt: variable EQUALSM1 exp SEMI .

    $default  reduce using rule 13 (stmt)


state 83

   14 stmt: variable EQUALSP1 exp SEMI .

    $default  reduce using rule 14 (stmt)


state 84

   21 stmt: PRINTF LPAREN STRING RPAREN SEMI .

    $default  reduce using rule 21 (stmt)


state 85

   10 stmt: IF exp THEN stmt ELSE . stmt

    ID      shift, and go to state 10
    PRINTF  shift, and go to state 11
    IF      shift, and go to state 12
    WHILE   shift, and go to state 13
    READ    shift, and go to state 14
    WRITE   shift, and go to state 15
    LBRACE  shift, and go to state 16
    PLUS1   shift, and go to state 17
    MINUS1  shift, and go to state 18

    stmt      go to state 88
    block     go to state 20
    variable  go to state 21


state 86

   19 stmt: READ LPAREN variable RPAREN SEMI .

    $default  reduce using rule 19 (stmt)


state 87

   20 stmt: WRITE LPAREN exp RPAREN SEMI .

    $default  reduce using rule 20 (stmt)


state 88

   10 stmt: IF exp THEN stmt ELSE stmt .

    $default  reduce using rule 10 (stmt)
